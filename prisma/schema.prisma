datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

model User {  
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username String @unique
  name String?
  email String
  password String

  bio String?
  avaUrl String?

  posts      Post[]   @relation("user_posts")
  likes      Post[]   @relation("user_likes")
  comments   Comment[]

  following  User[]   @relation("user_follows")
  followers  User[]   @relation("user_follows")

  @@map("users")
}

model Post {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  caption String
  media String?
  
  author User @relation("user_posts", fields: [authorId], references: [id])
  authorId Int

  likedBy User[] @relation("user_likes")
  comments Comment[]

  @@map("posts")
}

model Comment {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  content String

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int

  @@map("comments")

}

model Image {
  id Int @id @default(autoincrement())
  filename String
  path String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("images")
}


